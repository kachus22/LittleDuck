// Code generated from LittleDuck.g4 by ANTLR 4.9.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 29, 253,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5,
	3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7,
	3, 7, 3, 7, 3, 7, 5, 7, 105, 10, 7, 3, 8, 3, 8, 5, 8, 109, 10, 8, 3, 9,
	6, 9, 112, 10, 9, 13, 9, 14, 9, 113, 3, 10, 3, 10, 6, 10, 118, 10, 10,
	13, 10, 14, 10, 119, 3, 11, 3, 11, 5, 11, 124, 10, 11, 3, 11, 6, 11, 127,
	10, 11, 13, 11, 14, 11, 128, 3, 12, 5, 12, 132, 10, 12, 3, 12, 3, 12, 3,
	12, 3, 12, 5, 12, 138, 10, 12, 3, 13, 3, 13, 5, 13, 142, 10, 13, 3, 13,
	3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3,
	15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17,
	3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3,
	19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22,
	3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3,
	28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33,
	3, 33, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 7, 36, 217,
	10, 36, 12, 36, 14, 36, 220, 11, 36, 3, 37, 3, 37, 3, 37, 3, 37, 7, 37,
	226, 10, 37, 12, 37, 14, 37, 229, 11, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3,
	38, 7, 38, 236, 10, 38, 12, 38, 14, 38, 239, 11, 38, 5, 38, 241, 10, 38,
	3, 39, 3, 39, 5, 39, 245, 10, 39, 3, 40, 6, 40, 248, 10, 40, 13, 40, 14,
	40, 249, 3, 40, 3, 40, 2, 2, 41, 3, 2, 5, 2, 7, 2, 9, 2, 11, 2, 13, 2,
	15, 2, 17, 2, 19, 2, 21, 2, 23, 2, 25, 2, 27, 3, 29, 4, 31, 5, 33, 6, 35,
	7, 37, 8, 39, 9, 41, 10, 43, 11, 45, 12, 47, 13, 49, 14, 51, 15, 53, 16,
	55, 17, 57, 18, 59, 19, 61, 20, 63, 21, 65, 22, 67, 23, 69, 24, 71, 25,
	73, 26, 75, 27, 77, 28, 79, 29, 3, 2, 11, 5, 2, 67, 92, 97, 97, 99, 124,
	3, 2, 50, 59, 3, 2, 51, 59, 5, 2, 50, 59, 67, 72, 99, 104, 4, 2, 71, 71,
	103, 103, 4, 2, 45, 45, 47, 47, 4, 2, 36, 36, 94, 94, 6, 2, 12, 12, 15,
	15, 36, 36, 94, 94, 5, 2, 11, 12, 15, 15, 34, 34, 2, 257, 2, 27, 3, 2,
	2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3,
	2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43,
	3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2,
	51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2,
	2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2,
	2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2,
	2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 3, 81, 3,
	2, 2, 2, 5, 83, 3, 2, 2, 2, 7, 85, 3, 2, 2, 2, 9, 87, 3, 2, 2, 2, 11, 89,
	3, 2, 2, 2, 13, 104, 3, 2, 2, 2, 15, 108, 3, 2, 2, 2, 17, 111, 3, 2, 2,
	2, 19, 115, 3, 2, 2, 2, 21, 121, 3, 2, 2, 2, 23, 137, 3, 2, 2, 2, 25, 141,
	3, 2, 2, 2, 27, 145, 3, 2, 2, 2, 29, 154, 3, 2, 2, 2, 31, 158, 3, 2, 2,
	2, 33, 162, 3, 2, 2, 2, 35, 168, 3, 2, 2, 2, 37, 174, 3, 2, 2, 2, 39, 177,
	3, 2, 2, 2, 41, 182, 3, 2, 2, 2, 43, 184, 3, 2, 2, 2, 45, 186, 3, 2, 2,
	2, 47, 188, 3, 2, 2, 2, 49, 190, 3, 2, 2, 2, 51, 192, 3, 2, 2, 2, 53, 194,
	3, 2, 2, 2, 55, 196, 3, 2, 2, 2, 57, 198, 3, 2, 2, 2, 59, 200, 3, 2, 2,
	2, 61, 202, 3, 2, 2, 2, 63, 204, 3, 2, 2, 2, 65, 206, 3, 2, 2, 2, 67, 208,
	3, 2, 2, 2, 69, 210, 3, 2, 2, 2, 71, 213, 3, 2, 2, 2, 73, 221, 3, 2, 2,
	2, 75, 240, 3, 2, 2, 2, 77, 244, 3, 2, 2, 2, 79, 247, 3, 2, 2, 2, 81, 82,
	9, 2, 2, 2, 82, 4, 3, 2, 2, 2, 83, 84, 9, 3, 2, 2, 84, 6, 3, 2, 2, 2, 85,
	86, 9, 4, 2, 2, 86, 8, 3, 2, 2, 2, 87, 88, 9, 5, 2, 2, 88, 10, 3, 2, 2,
	2, 89, 90, 5, 9, 5, 2, 90, 91, 5, 9, 5, 2, 91, 92, 5, 9, 5, 2, 92, 93,
	5, 9, 5, 2, 93, 12, 3, 2, 2, 2, 94, 95, 7, 94, 2, 2, 95, 96, 7, 119, 2,
	2, 96, 97, 3, 2, 2, 2, 97, 105, 5, 11, 6, 2, 98, 99, 7, 94, 2, 2, 99, 100,
	7, 87, 2, 2, 100, 101, 3, 2, 2, 2, 101, 102, 5, 11, 6, 2, 102, 103, 5,
	11, 6, 2, 103, 105, 3, 2, 2, 2, 104, 94, 3, 2, 2, 2, 104, 98, 3, 2, 2,
	2, 105, 14, 3, 2, 2, 2, 106, 109, 5, 3, 2, 2, 107, 109, 5, 13, 7, 2, 108,
	106, 3, 2, 2, 2, 108, 107, 3, 2, 2, 2, 109, 16, 3, 2, 2, 2, 110, 112, 5,
	5, 3, 2, 111, 110, 3, 2, 2, 2, 112, 113, 3, 2, 2, 2, 113, 111, 3, 2, 2,
	2, 113, 114, 3, 2, 2, 2, 114, 18, 3, 2, 2, 2, 115, 117, 7, 48, 2, 2, 116,
	118, 5, 5, 3, 2, 117, 116, 3, 2, 2, 2, 118, 119, 3, 2, 2, 2, 119, 117,
	3, 2, 2, 2, 119, 120, 3, 2, 2, 2, 120, 20, 3, 2, 2, 2, 121, 123, 9, 6,
	2, 2, 122, 124, 9, 7, 2, 2, 123, 122, 3, 2, 2, 2, 123, 124, 3, 2, 2, 2,
	124, 126, 3, 2, 2, 2, 125, 127, 5, 5, 3, 2, 126, 125, 3, 2, 2, 2, 127,
	128, 3, 2, 2, 2, 128, 126, 3, 2, 2, 2, 128, 129, 3, 2, 2, 2, 129, 22, 3,
	2, 2, 2, 130, 132, 5, 17, 9, 2, 131, 130, 3, 2, 2, 2, 131, 132, 3, 2, 2,
	2, 132, 133, 3, 2, 2, 2, 133, 138, 5, 19, 10, 2, 134, 135, 5, 17, 9, 2,
	135, 136, 7, 48, 2, 2, 136, 138, 3, 2, 2, 2, 137, 131, 3, 2, 2, 2, 137,
	134, 3, 2, 2, 2, 138, 24, 3, 2, 2, 2, 139, 142, 5, 17, 9, 2, 140, 142,
	5, 23, 12, 2, 141, 139, 3, 2, 2, 2, 141, 140, 3, 2, 2, 2, 142, 143, 3,
	2, 2, 2, 143, 144, 5, 21, 11, 2, 144, 26, 3, 2, 2, 2, 145, 146, 7, 114,
	2, 2, 146, 147, 7, 116, 2, 2, 147, 148, 7, 113, 2, 2, 148, 149, 7, 105,
	2, 2, 149, 150, 7, 116, 2, 2, 150, 151, 7, 99, 2, 2, 151, 152, 7, 111,
	2, 2, 152, 153, 7, 99, 2, 2, 153, 28, 3, 2, 2, 2, 154, 155, 7, 120, 2,
	2, 155, 156, 7, 99, 2, 2, 156, 157, 7, 116, 2, 2, 157, 30, 3, 2, 2, 2,
	158, 159, 7, 107, 2, 2, 159, 160, 7, 112, 2, 2, 160, 161, 7, 118, 2, 2,
	161, 32, 3, 2, 2, 2, 162, 163, 7, 104, 2, 2, 163, 164, 7, 110, 2, 2, 164,
	165, 7, 113, 2, 2, 165, 166, 7, 99, 2, 2, 166, 167, 7, 118, 2, 2, 167,
	34, 3, 2, 2, 2, 168, 169, 7, 114, 2, 2, 169, 170, 7, 116, 2, 2, 170, 171,
	7, 107, 2, 2, 171, 172, 7, 112, 2, 2, 172, 173, 7, 118, 2, 2, 173, 36,
	3, 2, 2, 2, 174, 175, 7, 107, 2, 2, 175, 176, 7, 104, 2, 2, 176, 38, 3,
	2, 2, 2, 177, 178, 7, 103, 2, 2, 178, 179, 7, 110, 2, 2, 179, 180, 7, 117,
	2, 2, 180, 181, 7, 103, 2, 2, 181, 40, 3, 2, 2, 2, 182, 183, 7, 46, 2,
	2, 183, 42, 3, 2, 2, 2, 184, 185, 7, 60, 2, 2, 185, 44, 3, 2, 2, 2, 186,
	187, 7, 61, 2, 2, 187, 46, 3, 2, 2, 2, 188, 189, 7, 125, 2, 2, 189, 48,
	3, 2, 2, 2, 190, 191, 7, 127, 2, 2, 191, 50, 3, 2, 2, 2, 192, 193, 7, 42,
	2, 2, 193, 52, 3, 2, 2, 2, 194, 195, 7, 43, 2, 2, 195, 54, 3, 2, 2, 2,
	196, 197, 7, 44, 2, 2, 197, 56, 3, 2, 2, 2, 198, 199, 7, 45, 2, 2, 199,
	58, 3, 2, 2, 2, 200, 201, 7, 47, 2, 2, 201, 60, 3, 2, 2, 2, 202, 203, 7,
	49, 2, 2, 203, 62, 3, 2, 2, 2, 204, 205, 7, 63, 2, 2, 205, 64, 3, 2, 2,
	2, 206, 207, 7, 62, 2, 2, 207, 66, 3, 2, 2, 2, 208, 209, 7, 64, 2, 2, 209,
	68, 3, 2, 2, 2, 210, 211, 7, 62, 2, 2, 211, 212, 7, 64, 2, 2, 212, 70,
	3, 2, 2, 2, 213, 218, 5, 15, 8, 2, 214, 217, 5, 15, 8, 2, 215, 217, 5,
	5, 3, 2, 216, 214, 3, 2, 2, 2, 216, 215, 3, 2, 2, 2, 217, 220, 3, 2, 2,
	2, 218, 216, 3, 2, 2, 2, 218, 219, 3, 2, 2, 2, 219, 72, 3, 2, 2, 2, 220,
	218, 3, 2, 2, 2, 221, 227, 7, 36, 2, 2, 222, 223, 7, 94, 2, 2, 223, 226,
	9, 8, 2, 2, 224, 226, 10, 9, 2, 2, 225, 222, 3, 2, 2, 2, 225, 224, 3, 2,
	2, 2, 226, 229, 3, 2, 2, 2, 227, 225, 3, 2, 2, 2, 227, 228, 3, 2, 2, 2,
	228, 230, 3, 2, 2, 2, 229, 227, 3, 2, 2, 2, 230, 231, 7, 36, 2, 2, 231,
	74, 3, 2, 2, 2, 232, 241, 7, 50, 2, 2, 233, 237, 5, 7, 4, 2, 234, 236,
	5, 5, 3, 2, 235, 234, 3, 2, 2, 2, 236, 239, 3, 2, 2, 2, 237, 235, 3, 2,
	2, 2, 237, 238, 3, 2, 2, 2, 238, 241, 3, 2, 2, 2, 239, 237, 3, 2, 2, 2,
	240, 232, 3, 2, 2, 2, 240, 233, 3, 2, 2, 2, 241, 76, 3, 2, 2, 2, 242, 245,
	5, 23, 12, 2, 243, 245, 5, 25, 13, 2, 244, 242, 3, 2, 2, 2, 244, 243, 3,
	2, 2, 2, 245, 78, 3, 2, 2, 2, 246, 248, 9, 10, 2, 2, 247, 246, 3, 2, 2,
	2, 248, 249, 3, 2, 2, 2, 249, 247, 3, 2, 2, 2, 249, 250, 3, 2, 2, 2, 250,
	251, 3, 2, 2, 2, 251, 252, 8, 40, 2, 2, 252, 80, 3, 2, 2, 2, 20, 2, 104,
	108, 113, 119, 123, 128, 131, 137, 141, 216, 218, 225, 227, 237, 240, 244,
	249, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'programa'", "'var'", "'int'", "'float'", "'print'", "'if'", "'else'",
	"','", "':'", "';'", "'{'", "'}'", "'('", "')'", "'*'", "'+'", "'-'", "'/'",
	"'='", "'<'", "'>'", "'<>'",
}

var lexerSymbolicNames = []string{
	"", "PROGRAM", "VAR", "INT", "FLOAT", "PRINT", "IF", "ELSE", "COMMA", "COLON",
	"SEMICOLON", "LEFT_CURLY", "RIGHT_CURLY", "LEFT_ROUND", "RIGHT_ROUND",
	"STAR", "PLUS", "MINUS", "DIV", "EQUAL", "LESS_THAN", "GREATER_THAN", "NOT_EQUAL",
	"LET_ID", "LET_STRING", "LET_INT", "LET_FLOAT", "WHITESPACE",
}

var lexerRuleNames = []string{
	"NON_DIGIT", "DIGIT", "NON_ZERO_DIGIT", "HEXADECIMAL_DIGIT", "HEXQUAD",
	"UNIVERSAL_CHARACTER_NAME", "ID_NON_DIGIT", "INT_PART", "FRACTION", "EXPONENT",
	"POINT_FLOAT", "EXPONENT_FLOAT", "PROGRAM", "VAR", "INT", "FLOAT", "PRINT",
	"IF", "ELSE", "COMMA", "COLON", "SEMICOLON", "LEFT_CURLY", "RIGHT_CURLY",
	"LEFT_ROUND", "RIGHT_ROUND", "STAR", "PLUS", "MINUS", "DIV", "EQUAL", "LESS_THAN",
	"GREATER_THAN", "NOT_EQUAL", "LET_ID", "LET_STRING", "LET_INT", "LET_FLOAT",
	"WHITESPACE",
}

type LittleDuckLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewLittleDuckLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *LittleDuckLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewLittleDuckLexer(input antlr.CharStream) *LittleDuckLexer {
	l := new(LittleDuckLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "LittleDuck.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// LittleDuckLexer tokens.
const (
	LittleDuckLexerPROGRAM      = 1
	LittleDuckLexerVAR          = 2
	LittleDuckLexerINT          = 3
	LittleDuckLexerFLOAT        = 4
	LittleDuckLexerPRINT        = 5
	LittleDuckLexerIF           = 6
	LittleDuckLexerELSE         = 7
	LittleDuckLexerCOMMA        = 8
	LittleDuckLexerCOLON        = 9
	LittleDuckLexerSEMICOLON    = 10
	LittleDuckLexerLEFT_CURLY   = 11
	LittleDuckLexerRIGHT_CURLY  = 12
	LittleDuckLexerLEFT_ROUND   = 13
	LittleDuckLexerRIGHT_ROUND  = 14
	LittleDuckLexerSTAR         = 15
	LittleDuckLexerPLUS         = 16
	LittleDuckLexerMINUS        = 17
	LittleDuckLexerDIV          = 18
	LittleDuckLexerEQUAL        = 19
	LittleDuckLexerLESS_THAN    = 20
	LittleDuckLexerGREATER_THAN = 21
	LittleDuckLexerNOT_EQUAL    = 22
	LittleDuckLexerLET_ID       = 23
	LittleDuckLexerLET_STRING   = 24
	LittleDuckLexerLET_INT      = 25
	LittleDuckLexerLET_FLOAT    = 26
	LittleDuckLexerWHITESPACE   = 27
)

// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			shift(2), // programa
			nil,      // id
			nil,      // semicolon
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // left_curly
			nil,      // right_curly
			nil,      // int
			nil,      // float
			nil,      // equal
			nil,      // if
			nil,      // left_round
			nil,      // right_round
			nil,      // else
			nil,      // print
			nil,      // string_literal
			nil,      // greater_than
			nil,      // less_than
			nil,      // not_equal
			nil,      // plus
			nil,      // minus
			nil,      // star
			nil,      // div
			nil,      // int_literal
			nil,      // float_literal
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // programa
			nil,          // id
			nil,          // semicolon
			nil,          // empty
			nil,          // var
			nil,          // colon
			nil,          // comma
			nil,          // left_curly
			nil,          // right_curly
			nil,          // int
			nil,          // float
			nil,          // equal
			nil,          // if
			nil,          // left_round
			nil,          // right_round
			nil,          // else
			nil,          // print
			nil,          // string_literal
			nil,          // greater_than
			nil,          // less_than
			nil,          // not_equal
			nil,          // plus
			nil,          // minus
			nil,          // star
			nil,          // div
			nil,          // int_literal
			nil,          // float_literal
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // programa
			shift(3), // id
			nil,      // semicolon
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // left_curly
			nil,      // right_curly
			nil,      // int
			nil,      // float
			nil,      // equal
			nil,      // if
			nil,      // left_round
			nil,      // right_round
			nil,      // else
			nil,      // print
			nil,      // string_literal
			nil,      // greater_than
			nil,      // less_than
			nil,      // not_equal
			nil,      // plus
			nil,      // minus
			nil,      // star
			nil,      // div
			nil,      // int_literal
			nil,      // float_literal
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // programa
			nil,      // id
			shift(4), // semicolon
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // left_curly
			nil,      // right_curly
			nil,      // int
			nil,      // float
			nil,      // equal
			nil,      // if
			nil,      // left_round
			nil,      // right_round
			nil,      // else
			nil,      // print
			nil,      // string_literal
			nil,      // greater_than
			nil,      // less_than
			nil,      // not_equal
			nil,      // plus
			nil,      // minus
			nil,      // star
			nil,      // div
			nil,      // int_literal
			nil,      // float_literal
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			shift(7),  // var
			nil,       // colon
			nil,       // comma
			reduce(3), // left_curly, reduce: Programa_vars
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // programa
			nil,      // id
			nil,      // semicolon
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			shift(9), // left_curly
			nil,      // right_curly
			nil,      // int
			nil,      // float
			nil,      // equal
			nil,      // if
			nil,      // left_round
			nil,      // right_round
			nil,      // else
			nil,      // print
			nil,      // string_literal
			nil,      // greater_than
			nil,      // less_than
			nil,      // not_equal
			nil,      // plus
			nil,      // minus
			nil,      // star
			nil,      // div
			nil,      // int_literal
			nil,      // float_literal
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			reduce(2), // left_curly, reduce: Programa_vars
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			shift(10), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: Programa
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			shift(12),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(12), // right_curly, reduce: Bloque_more
			nil,        // int
			nil,        // float
			nil,        // equal
			shift(18),  // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			shift(19),  // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			reduce(7), // colon, reduce: Vars_id_next
			shift(21), // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			shift(10), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			reduce(9), // left_curly, reduce: Vars_more
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			shift(24), // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			shift(25), // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			shift(12),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(12), // right_curly, reduce: Bloque_more
			nil,        // int
			nil,        // float
			nil,        // equal
			shift(18),  // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			shift(19),  // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(15), // id, reduce: Estatuto
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(15), // right_curly, reduce: Estatuto
			nil,        // int
			nil,        // float
			nil,        // equal
			reduce(15), // if, reduce: Estatuto
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			reduce(15), // print, reduce: Estatuto
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(16), // id, reduce: Estatuto
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(16), // right_curly, reduce: Estatuto
			nil,        // int
			nil,        // float
			nil,        // equal
			reduce(16), // if, reduce: Estatuto
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			reduce(16), // print, reduce: Estatuto
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(17), // id, reduce: Estatuto
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(17), // right_curly, reduce: Estatuto
			nil,        // int
			nil,        // float
			nil,        // equal
			reduce(17), // if, reduce: Estatuto
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			reduce(17), // print, reduce: Estatuto
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			shift(27), // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			shift(28), // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			shift(29), // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			shift(30), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			shift(10), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			reduce(9), // left_curly, reduce: Vars_more
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			reduce(4), // left_curly, reduce: Vars
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(33),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(10), // $, reduce: Bloque
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(11), // right_curly, reduce: Bloque_more
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(47),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			shift(49),  // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			shift(55), // int
			shift(56), // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			reduce(7), // colon, reduce: Vars_id_next
			shift(21), // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			reduce(8), // left_curly, reduce: Vars_more
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			shift(58), // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(31), // semicolon, reduce: Expresion_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			shift(61),  // greater_than
			shift(62),  // less_than
			shift(63),  // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(35), // semicolon, reduce: Exp_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(35), // greater_than, reduce: Exp_next
			reduce(35), // less_than, reduce: Exp_next
			reduce(35), // not_equal, reduce: Exp_next
			shift(65),  // plus
			shift(66),  // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(42), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			reduce(42), // int_literal, reduce: Factor_sign
			reduce(42), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(43), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			reduce(43), // int_literal, reduce: Factor_sign
			reduce(43), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(39), // semicolon, reduce: Termino_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(39), // greater_than, reduce: Termino_next
			reduce(39), // less_than, reduce: Termino_next
			reduce(39), // not_equal, reduce: Termino_next
			reduce(39), // plus, reduce: Termino_next
			reduce(39), // minus, reduce: Termino_next
			shift(68),  // star
			shift(69),  // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			shift(70), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			shift(72), // int_literal
			shift(73), // float_literal
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			shift(74), // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(31), // right_round, reduce: Expresion_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			shift(77),  // greater_than
			shift(78),  // less_than
			shift(79),  // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(35), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(35), // greater_than, reduce: Exp_next
			reduce(35), // less_than, reduce: Exp_next
			reduce(35), // not_equal, reduce: Exp_next
			shift(81),  // plus
			shift(82),  // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(39), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(39), // greater_than, reduce: Termino_next
			reduce(39), // less_than, reduce: Termino_next
			reduce(39), // not_equal, reduce: Termino_next
			reduce(39), // plus, reduce: Termino_next
			reduce(39), // minus, reduce: Termino_next
			shift(84),  // star
			shift(85),  // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			shift(86), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			shift(88), // int_literal
			shift(89), // float_literal
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(90),  // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(26), // right_round, reduce: Escritura_params_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			shift(93), // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(90),  // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(26), // right_round, reduce: Escritura_params_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(31), // comma, reduce: Expresion_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(31), // right_round, reduce: Expresion_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			shift(96),  // greater_than
			shift(97),  // less_than
			shift(98),  // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(35), // comma, reduce: Exp_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(35), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(35), // greater_than, reduce: Exp_next
			reduce(35), // less_than, reduce: Exp_next
			reduce(35), // not_equal, reduce: Exp_next
			shift(100), // plus
			shift(101), // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(39), // comma, reduce: Termino_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(39), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(39), // greater_than, reduce: Termino_next
			reduce(39), // less_than, reduce: Termino_next
			reduce(39), // not_equal, reduce: Termino_next
			reduce(39), // plus, reduce: Termino_next
			reduce(39), // minus, reduce: Termino_next
			shift(103), // star
			shift(104), // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			shift(105), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			shift(107), // int_literal
			shift(108), // float_literal
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			shift(109), // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(13), // semicolon, reduce: Tipo
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(14), // semicolon, reduce: Tipo
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			reduce(6), // colon, reduce: Vars_id_next
			nil,       // comma
			nil,       // left_curly
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(18), // id, reduce: Asignacion
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(18), // right_curly, reduce: Asignacion
			nil,        // int
			nil,        // float
			nil,        // equal
			reduce(18), // if, reduce: Asignacion
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			reduce(18), // print, reduce: Asignacion
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			shift(110), // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(27), // semicolon, reduce: Expresion
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(111), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(111), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(111), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(32), // semicolon, reduce: Exp
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(32), // greater_than, reduce: Exp
			reduce(32), // less_than, reduce: Exp
			reduce(32), // not_equal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(33),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(33),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(36), // semicolon, reduce: Termino
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(36), // greater_than, reduce: Termino
			reduce(36), // less_than, reduce: Termino
			reduce(36), // not_equal, reduce: Termino
			reduce(36), // plus, reduce: Termino
			reduce(36), // minus, reduce: Termino
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(33),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(33),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(45), // semicolon, reduce: Cte
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(45), // greater_than, reduce: Cte
			reduce(45), // less_than, reduce: Cte
			reduce(45), // not_equal, reduce: Cte
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // star, reduce: Cte
			reduce(45), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(41), // semicolon, reduce: Factor
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(41), // greater_than, reduce: Factor
			reduce(41), // less_than, reduce: Factor
			reduce(41), // not_equal, reduce: Factor
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // star, reduce: Factor
			reduce(41), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(46), // semicolon, reduce: Cte
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(46), // greater_than, reduce: Cte
			reduce(46), // less_than, reduce: Cte
			reduce(46), // not_equal, reduce: Cte
			reduce(46), // plus, reduce: Cte
			reduce(46), // minus, reduce: Cte
			reduce(46), // star, reduce: Cte
			reduce(46), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(47), // semicolon, reduce: Cte
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(47), // greater_than, reduce: Cte
			reduce(47), // less_than, reduce: Cte
			reduce(47), // not_equal, reduce: Cte
			reduce(47), // plus, reduce: Cte
			reduce(47), // minus, reduce: Cte
			reduce(47), // star, reduce: Cte
			reduce(47), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(123), // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			shift(124), // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(27), // right_round, reduce: Expresion
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(125), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(125), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(125), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(32), // right_round, reduce: Exp
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(32), // greater_than, reduce: Exp
			reduce(32), // less_than, reduce: Exp
			reduce(32), // not_equal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(36), // right_round, reduce: Termino
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(36), // greater_than, reduce: Termino
			reduce(36), // less_than, reduce: Termino
			reduce(36), // not_equal, reduce: Termino
			reduce(36), // plus, reduce: Termino
			reduce(36), // minus, reduce: Termino
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(45), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(45), // greater_than, reduce: Cte
			reduce(45), // less_than, reduce: Cte
			reduce(45), // not_equal, reduce: Cte
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // star, reduce: Cte
			reduce(45), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(41), // right_round, reduce: Factor
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(41), // greater_than, reduce: Factor
			reduce(41), // less_than, reduce: Factor
			reduce(41), // not_equal, reduce: Factor
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // star, reduce: Factor
			reduce(41), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(46), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(46), // greater_than, reduce: Cte
			reduce(46), // less_than, reduce: Cte
			reduce(46), // not_equal, reduce: Cte
			reduce(46), // plus, reduce: Cte
			reduce(46), // minus, reduce: Cte
			reduce(46), // star, reduce: Cte
			reduce(46), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(47), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(47), // greater_than, reduce: Cte
			reduce(47), // less_than, reduce: Cte
			reduce(47), // not_equal, reduce: Cte
			reduce(47), // plus, reduce: Cte
			reduce(47), // minus, reduce: Cte
			reduce(47), // star, reduce: Cte
			reduce(47), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(47),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			shift(49),  // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(24), // right_round, reduce: Escritura_params
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			shift(137), // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			shift(138), // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(23), // right_round, reduce: Escritura_params
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(27), // comma, reduce: Expresion
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(27), // right_round, reduce: Expresion
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(139), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(139), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(139), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(32), // comma, reduce: Exp
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(32), // right_round, reduce: Exp
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(32), // greater_than, reduce: Exp
			reduce(32), // less_than, reduce: Exp
			reduce(32), // not_equal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(47),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(47),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(36), // comma, reduce: Termino
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(36), // right_round, reduce: Termino
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(36), // greater_than, reduce: Termino
			reduce(36), // less_than, reduce: Termino
			reduce(36), // not_equal, reduce: Termino
			reduce(36), // plus, reduce: Termino
			reduce(36), // minus, reduce: Termino
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(47),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(47),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(45), // comma, reduce: Cte
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(45), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(45), // greater_than, reduce: Cte
			reduce(45), // less_than, reduce: Cte
			reduce(45), // not_equal, reduce: Cte
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // star, reduce: Cte
			reduce(45), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(41), // comma, reduce: Factor
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(41), // right_round, reduce: Factor
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(41), // greater_than, reduce: Factor
			reduce(41), // less_than, reduce: Factor
			reduce(41), // not_equal, reduce: Factor
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // star, reduce: Factor
			reduce(41), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(46), // comma, reduce: Cte
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(46), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(46), // greater_than, reduce: Cte
			reduce(46), // less_than, reduce: Cte
			reduce(46), // not_equal, reduce: Cte
			reduce(46), // plus, reduce: Cte
			reduce(46), // minus, reduce: Cte
			reduce(46), // star, reduce: Cte
			reduce(46), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(47), // comma, reduce: Cte
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(47), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(47), // greater_than, reduce: Cte
			reduce(47), // less_than, reduce: Cte
			reduce(47), // not_equal, reduce: Cte
			reduce(47), // plus, reduce: Cte
			reduce(47), // minus, reduce: Cte
			reduce(47), // star, reduce: Cte
			reduce(47), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // programa
			reduce(5), // id, reduce: Vars_id
			nil,       // semicolon
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			reduce(5), // left_curly, reduce: Vars_id
			nil,       // right_curly
			nil,       // int
			nil,       // float
			nil,       // equal
			nil,       // if
			nil,       // left_round
			nil,       // right_round
			nil,       // else
			nil,       // print
			nil,       // string_literal
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // star
			nil,       // div
			nil,       // int_literal
			nil,       // float_literal
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(40), // semicolon, reduce: Factor
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(40), // greater_than, reduce: Factor
			reduce(40), // less_than, reduce: Factor
			reduce(40), // not_equal, reduce: Factor
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // star, reduce: Factor
			reduce(40), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(28), // semicolon, reduce: Expresion_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(35), // semicolon, reduce: Exp_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(152), // plus
			shift(153), // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(39), // semicolon, reduce: Termino_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(39), // plus, reduce: Termino_next
			reduce(39), // minus, reduce: Termino_next
			shift(155), // star
			shift(156), // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			shift(157), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			shift(159), // int_literal
			shift(160), // float_literal
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(29), // semicolon, reduce: Expresion_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(30), // semicolon, reduce: Expresion_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(33), // semicolon, reduce: Exp_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(33), // greater_than, reduce: Exp_next
			reduce(33), // less_than, reduce: Exp_next
			reduce(33), // not_equal, reduce: Exp_next
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(34), // semicolon, reduce: Exp_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(34), // greater_than, reduce: Exp_next
			reduce(34), // less_than, reduce: Exp_next
			reduce(34), // not_equal, reduce: Exp_next
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(37), // semicolon, reduce: Termino_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(37), // greater_than, reduce: Termino_next
			reduce(37), // less_than, reduce: Termino_next
			reduce(37), // not_equal, reduce: Termino_next
			reduce(37), // plus, reduce: Termino_next
			reduce(37), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(38), // semicolon, reduce: Termino_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(38), // greater_than, reduce: Termino_next
			reduce(38), // less_than, reduce: Termino_next
			reduce(38), // not_equal, reduce: Termino_next
			reduce(38), // plus, reduce: Termino_next
			reduce(38), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(21), // semicolon, reduce: Condicion_else
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			shift(162), // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			shift(12),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(12), // right_curly, reduce: Bloque_more
			nil,        // int
			nil,        // float
			nil,        // equal
			shift(18),  // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			shift(19),  // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(40), // right_round, reduce: Factor
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(40), // greater_than, reduce: Factor
			reduce(40), // less_than, reduce: Factor
			reduce(40), // not_equal, reduce: Factor
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // star, reduce: Factor
			reduce(40), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(28), // right_round, reduce: Expresion_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(35), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(166), // plus
			shift(167), // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(39), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(39), // plus, reduce: Termino_next
			reduce(39), // minus, reduce: Termino_next
			shift(169), // star
			shift(170), // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			shift(171), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			shift(173), // int_literal
			shift(174), // float_literal
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(29), // right_round, reduce: Expresion_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(30), // right_round, reduce: Expresion_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(33), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(33), // greater_than, reduce: Exp_next
			reduce(33), // less_than, reduce: Exp_next
			reduce(33), // not_equal, reduce: Exp_next
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(34), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(34), // greater_than, reduce: Exp_next
			reduce(34), // less_than, reduce: Exp_next
			reduce(34), // not_equal, reduce: Exp_next
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(37), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(37), // greater_than, reduce: Termino_next
			reduce(37), // less_than, reduce: Termino_next
			reduce(37), // not_equal, reduce: Termino_next
			reduce(37), // plus, reduce: Termino_next
			reduce(37), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(38), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(38), // greater_than, reduce: Termino_next
			reduce(38), // less_than, reduce: Termino_next
			reduce(38), // not_equal, reduce: Termino_next
			reduce(38), // plus, reduce: Termino_next
			reduce(38), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(25), // right_round, reduce: Escritura_params_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(40), // comma, reduce: Factor
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(40), // right_round, reduce: Factor
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(40), // greater_than, reduce: Factor
			reduce(40), // less_than, reduce: Factor
			reduce(40), // not_equal, reduce: Factor
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // star, reduce: Factor
			reduce(40), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(22), // id, reduce: Escritura
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(22), // right_curly, reduce: Escritura
			nil,        // int
			nil,        // float
			nil,        // equal
			reduce(22), // if, reduce: Escritura
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			reduce(22), // print, reduce: Escritura
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(41),  // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(28), // comma, reduce: Expresion_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(28), // right_round, reduce: Expresion_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(35), // comma, reduce: Exp_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(35), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(177), // plus
			shift(178), // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(39), // comma, reduce: Termino_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(39), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(39), // plus, reduce: Termino_next
			reduce(39), // minus, reduce: Termino_next
			shift(180), // star
			shift(181), // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			shift(182), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			shift(184), // int_literal
			shift(185), // float_literal
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(29), // comma, reduce: Expresion_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(29), // right_round, reduce: Expresion_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(30), // comma, reduce: Expresion_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(30), // right_round, reduce: Expresion_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(33), // comma, reduce: Exp_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(33), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(33), // greater_than, reduce: Exp_next
			reduce(33), // less_than, reduce: Exp_next
			reduce(33), // not_equal, reduce: Exp_next
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(34), // comma, reduce: Exp_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(34), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(34), // greater_than, reduce: Exp_next
			reduce(34), // less_than, reduce: Exp_next
			reduce(34), // not_equal, reduce: Exp_next
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(37), // comma, reduce: Termino_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(37), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(37), // greater_than, reduce: Termino_next
			reduce(37), // less_than, reduce: Termino_next
			reduce(37), // not_equal, reduce: Termino_next
			reduce(37), // plus, reduce: Termino_next
			reduce(37), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(38), // comma, reduce: Termino_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(38), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			reduce(38), // greater_than, reduce: Termino_next
			reduce(38), // less_than, reduce: Termino_next
			reduce(38), // not_equal, reduce: Termino_next
			reduce(38), // plus, reduce: Termino_next
			reduce(38), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			shift(186), // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(32), // semicolon, reduce: Exp
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(111), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(111), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(36), // semicolon, reduce: Termino
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(36), // plus, reduce: Termino
			reduce(36), // minus, reduce: Termino
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(111), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(111), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(45), // semicolon, reduce: Cte
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // star, reduce: Cte
			reduce(45), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(41), // semicolon, reduce: Factor
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // star, reduce: Factor
			reduce(41), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(46), // semicolon, reduce: Cte
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(46), // plus, reduce: Cte
			reduce(46), // minus, reduce: Cte
			reduce(46), // star, reduce: Cte
			reduce(46), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(47), // semicolon, reduce: Cte
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(47), // plus, reduce: Cte
			reduce(47), // minus, reduce: Cte
			reduce(47), // star, reduce: Cte
			reduce(47), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			shift(191), // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(193), // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			shift(194), // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			shift(195), // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(32), // right_round, reduce: Exp
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(125), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(125), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(36), // right_round, reduce: Termino
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(36), // plus, reduce: Termino
			reduce(36), // minus, reduce: Termino
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(125), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(125), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(45), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // star, reduce: Cte
			reduce(45), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(41), // right_round, reduce: Factor
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // star, reduce: Factor
			reduce(41), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(46), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(46), // plus, reduce: Cte
			reduce(46), // minus, reduce: Cte
			reduce(46), // star, reduce: Cte
			reduce(46), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(47), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(47), // plus, reduce: Cte
			reduce(47), // minus, reduce: Cte
			reduce(47), // star, reduce: Cte
			reduce(47), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			shift(200), // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(32), // comma, reduce: Exp
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(32), // right_round, reduce: Exp
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(139), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(139), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(36), // comma, reduce: Termino
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(36), // right_round, reduce: Termino
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(36), // plus, reduce: Termino
			reduce(36), // minus, reduce: Termino
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(139), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(44), // id, reduce: Factor_sign
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			shift(139), // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(36),  // plus
			shift(37),  // minus
			nil,        // star
			nil,        // div
			reduce(44), // int_literal, reduce: Factor_sign
			reduce(44), // float_literal, reduce: Factor_sign
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(45), // comma, reduce: Cte
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(45), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // star, reduce: Cte
			reduce(45), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(41), // comma, reduce: Factor
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(41), // right_round, reduce: Factor
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // star, reduce: Factor
			reduce(41), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(46), // comma, reduce: Cte
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(46), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(46), // plus, reduce: Cte
			reduce(46), // minus, reduce: Cte
			reduce(46), // star, reduce: Cte
			reduce(46), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(47), // comma, reduce: Cte
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(47), // right_round, reduce: Cte
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(47), // plus, reduce: Cte
			reduce(47), // minus, reduce: Cte
			reduce(47), // star, reduce: Cte
			reduce(47), // div, reduce: Cte
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(40), // semicolon, reduce: Factor
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // star, reduce: Factor
			reduce(40), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(33), // semicolon, reduce: Exp_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(34), // semicolon, reduce: Exp_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(37), // semicolon, reduce: Termino_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(37), // plus, reduce: Termino_next
			reduce(37), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(38), // semicolon, reduce: Termino_next
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(38), // plus, reduce: Termino_next
			reduce(38), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			reduce(19), // id, reduce: Condicion
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(19), // right_curly, reduce: Condicion
			nil,        // int
			nil,        // float
			nil,        // equal
			reduce(19), // if, reduce: Condicion
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			reduce(19), // print, reduce: Condicion
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(20), // semicolon, reduce: Condicion_else
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			shift(12),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			reduce(12), // right_curly, reduce: Bloque_more
			nil,        // int
			nil,        // float
			nil,        // equal
			shift(18),  // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			shift(19),  // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(10), // semicolon, reduce: Bloque
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			reduce(10), // else, reduce: Bloque
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(40), // right_round, reduce: Factor
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // star, reduce: Factor
			reduce(40), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(33), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(34), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(37), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(37), // plus, reduce: Termino_next
			reduce(37), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(38), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(38), // plus, reduce: Termino_next
			reduce(38), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(40), // comma, reduce: Factor
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(40), // right_round, reduce: Factor
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // star, reduce: Factor
			reduce(40), // div, reduce: Factor
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(33), // comma, reduce: Exp_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(33), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(34), // comma, reduce: Exp_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(34), // right_round, reduce: Exp_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(37), // comma, reduce: Termino_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(37), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(37), // plus, reduce: Termino_next
			reduce(37), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(38), // comma, reduce: Termino_next
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			reduce(38), // right_round, reduce: Termino_next
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(38), // plus, reduce: Termino_next
			reduce(38), // minus, reduce: Termino_next
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			shift(206), // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // programa
			nil,        // id
			reduce(10), // semicolon, reduce: Bloque
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // left_curly
			nil,        // right_curly
			nil,        // int
			nil,        // float
			nil,        // equal
			nil,        // if
			nil,        // left_round
			nil,        // right_round
			nil,        // else
			nil,        // print
			nil,        // string_literal
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // star
			nil,        // div
			nil,        // int_literal
			nil,        // float_literal
		},
	},
}
